extends base.pug

block style 
    <link rel="stylesheet" href="/static/css/testing.css">

block title
    <title>Modify test cases</title>

block content 
    <aside id="sidebar">
        <h2>Files</h2>
        <ul>
            <li><a href="#top">-- Go to top</a></li>
            each file in files
                <li><a href="##{file.path}">#{file.path}</a></li>
        </ul>
    </aside>

    <main>
        <h1 id="top">Modify test cases</h1>
        <p id="user-p">User: <p>
        <p id="repo-p">Repository: </p>
        <p id="pull-p">Open pull request: </p>
        <p id="log-p">Test log: </p>

        <form onsubmit="submitTests(event)">
            each file in files 
                <div class="file-div">
                    <h2 id="#{file.path}" class="file-path">#{file.path}</h2>
                
                    each func in file.functions
                        <div class="func-div" data-func-name="#{func.name}" data-func-params="#{func.params}" data-func-async="#{func.async}" data-func-string="#{func.functionString}" data-func-status="#{func.status}">
                            if func.status !== 1
                                <button type="button" class="btn-exclude" onclick="toggleFunction('#{func.name}', this.parentElement)">Exclude #{func.name}</button>
                            else 
                                <button type="button" class="btn-include" onclick="toggleFunction('#{func.name}', this.parentElement)">Include #{func.name}</button>
                            
                            <div class="func-name-description">
                                <section>
                                    <div class="input-fields">    
                                        <h3>#{func.name}</h3>
                                        <p>Status: <a class="func-status">#{func.status}</a></p>
                                        case func.status
                                            when -1: p At least one test case failed.
                                            when 0: p Not assessed: Choose to either include or exclude #{func.name} from test.
                                            when 1: p Assessed: #{func.name} will NOT be tested.
                                            when 2: p All tests passed: 100% code-coverage of #{func.name}.
                                            default: p Look up status code in the guide.
                                        if func.status === 1
                                            <label>Comment</label>
                                            if func.comment === ""
                                                <input type="text" class="comment" placeholder="Write comment here" required>
                                            else 
                                                <input type="text" class="comment" value="#{func.comment}" required>
                                    </div>
                                </section>

                                pre #{func.functionString}
                            </div>
                            
                            if func.status !== 1
                                if func.testCases.length === 0
                                    <script src="/static/js/testCases.js" onload="addNewTestCase('#{func.name}', this.parentElement, 0)"></script>
                                else
                                    each tc, tcdex in func.testCases
                                        if tc.passed === "true" || tc.passed === true
                                            <div class="tc-div passed" data-tc-index="#{tcdex}" data-tc-passed="#{tc.passed}">
                                        else
                                            <div class="tc-div" data-tc-index="#{tcdex}" data-tc-passed="#{tc.passed}">
                                        
                                        <h4>Test case #{tcdex + 1} (#{func.name})</h4>
                                        <p>Passed: <a class="tc-pass">#{tc.passed}</a></p>

                                        <section class="tc-description">
                                            <div class="input-fields">
                                                <label>Description</label>
                                                if tc.description === ""
                                                    <input type="text" class="description" placeholder="Description for test case" required>
                                                else
                                                    <input type="text" class="description" value="#{tc.description}" required>
                                            </div>
                                        </section>

                                        <section class="tc-arguments">
                                            each arg, argdex in tc.arguments
                                                <div class="input-fields">
                                                    <label>Argument #{argdex + 1}</label>
                                                    <input type="text" class="input arg" value="#{arg}" required>
                                                </div>
                                        </section>
                                        
                                        <section class="tc-matcher">
                                            <div class="input-fields">
                                                <label>Choose matcher</label>
                                                <select class="selected-matcher" required>
                                                    <option value="">Choose a matcher</option>
                                                    each matcher in matcherOptions 
                                                        if tc.matcher === ""
                                                            <option value="#{matcher}">#{matcher}</option>
                                                        else
                                                            if matcher === tc.matcher 
                                                                <option value="#{matcher}" selected>#{matcher}</option>
                                                            else 
                                                                <option value="#{matcher}">#{matcher}</option>
                                                </select>
                                            </div>
                                        </section>
                                        
                                        <section class="tc-output">
                                            <div class="input-fields">
                                                <label>Expected output</label>
                                                <input type="text" class="output" value="#{tc.expected}" required>
                                            </div>
                                        </section>

                                        <button type="button" class="btn-del" onclick="removeTestCase(this.parentElement)">Delete test case #{tcdex + 1}</button>
                                        </div>

                            if func.status === 1
                                <button type="button" class="btn-add" onclick="addNewTestCase('#{func.name}', this.parentElement, #{func.testCases.length})" hidden>+ Add new test case</button>
                            else if func.testCases.length === 0
                                <button type="button" class="btn-add" onclick="addNewTestCase('#{func.name}', this.parentElement, 1)">+ Add new test case</button>
                            else
                                <button type="button" class="btn-add" onclick="addNewTestCase('#{func.name}', this.parentElement, #{func.testCases.length})">+ Add new test case</button>
                        </div>
                </div>
            <button type="submit">Submit</button>
        </form>
    </main>

block script
    <script src="/static/js/testing.js"></script>
    <script src="/static/js/testCases.js"></script>
